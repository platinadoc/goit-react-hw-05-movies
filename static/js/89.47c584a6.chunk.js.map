{"version":3,"file":"static/js/89.47c584a6.chunk.js","mappings":"8NACA,EAAuB,sBAAvB,EAAqD,uBAArD,EAA2F,8B,SCiC3F,EA7BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GAAG,OAAIN,EAAWM,EAAf,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACP,KAGF,8BACsB,IAAnBF,EAAQY,QACP,cAAGC,UAAWC,EAAd,6CAEA,wBACGd,EAAQe,KAAI,SAAAC,GAAM,OACjB,gBAAIH,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,qBAAiCE,EAAOC,WACxC,uBAAID,EAAOE,YAFeF,EAAOG,GADlB,OAU5B,C,4MC9BKC,EAAM,gCACNC,EAAM,mCAECC,EAAgB,mCAAG,6GAELC,IAAAA,IAAA,UAClBH,EADkB,wCACiBC,IAHZ,cAEtBG,EAFsB,yBAMrBA,EAASC,MANY,gCAQ5Bf,QAAQC,IAAR,MAR4B,yDAAH,qDAYhBe,EAAe,mCAAG,WAAMP,GAAN,gGAEJI,IAAAA,IAAA,UAClBH,EADkB,iBACND,EADM,oBACQE,EADR,oBAFI,cAErBG,EAFqB,yBAMpBA,EAASC,MANW,gCAQ3Bf,QAAQC,IAAR,MAR2B,yDAAH,sDAYfgB,EAAO,mCAAG,WAAMR,GAAN,gGAEII,IAAAA,IAAA,UAClBH,EADkB,iBACND,EADM,4BACgBE,EADhB,oBAFJ,cAEbG,EAFa,yBAMZA,EAASC,KAAKG,MANF,gCAQnBlB,QAAQC,IAAR,MARmB,yDAAH,sDAYPN,EAAU,mCAAG,WAAMc,GAAN,gGAECI,IAAAA,IAAA,UAClBH,EADkB,iBACND,EADM,4BACgBE,EADhB,oBAFD,cAEhBG,EAFgB,yBAKfA,EAASC,KAAKI,SALC,gCAOtBnB,QAAQC,IAAR,MAPsB,yDAAH,sDAWVmB,EAAgB,mCAAG,WAAMC,GAAN,iFACjBR,IAAM,GAAD,OAAIH,EAAJ,gBAAuB,CACvCY,OAAQ,CACNC,QAASZ,EACTU,MAAOA,KAERzB,MAAK,SAAAkB,GAAQ,OAAIA,EAASC,IAAb,IANc,mFAAH,qD","sources":["webpack://react-homework-template/./src/components/reviews/Reviews.module.css?9ce4","components/reviews/Reviews.jsx","services/apiService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Reviews_item__j+-XR\",\"title\":\"Reviews_title__QuR56\",\"notification\":\"Reviews_notification__CVcnO\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/apiService';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(res => setReviews(res))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p className={s.notification}>Are not review for this movie.</p>\n      ) : (\n        <ul>\n          {reviews.map(review => (\n            <li className={s.item} key={review.id}>\n              <h3 className={s.title}>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'e8d4c6f2420119eaaf1bee0b0d0a70d8';\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/week?api_key=${KEY}`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoById = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFilmsBySearch = async query => {\n  return await axios(`${URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n    },\n  }).then(response => response.data);\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","res","catch","err","console","log","length","className","s","map","review","author","content","id","URL","KEY","getTrendingFilms","axios","response","data","getFullInfoById","getCast","cast","results","getFilmsBySearch","query","params","api_key"],"sourceRoot":""}