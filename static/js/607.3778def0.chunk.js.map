{"version":3,"file":"static/js/607.3778def0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/moviesList/MoviesList.module.css?a81a","components/moviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/searchBar/SearchBar.module.css?1f80","components/searchBar/SearchBar.jsx","pages/Movies.jsx","services/apiService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MoviesList_section__XVXCi\",\"title\":\"MoviesList_title__H7wjx\",\"item\":\"MoviesList_item__vmUfl\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport s from './MoviesList.module.css';\n\nconst MoviesList = ({ title, films }) => {\n  const location = useLocation();\n\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <ul className={s.list}>\n        {films.map(el => (\n          <li className={s.item} key={el.id}>\n            <Link to={`/movies/${el.id}`} state={location}>\n              {el.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nMoviesList.propTypes = {\n  title: PropTypes.string,\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__kK3vK\",\"input\":\"SearchBar_input__du0TV\",\"button\":\"SearchBar_button__EK7vJ\"};","import { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport s from './SearchBar.module.css';\n\nconst SearchBar = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [searchQuery, setSearchQquery] = useState('');\n\n  const onHandleChange = e => {\n    const query = e.target.value.trim();\n    setSearchQquery(query);\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    navigate(`?q=${searchQuery}`, {\n      state: location.state,\n    });\n  };\n\n  return (\n    <form className={s.form} onSubmit={onHandleSubmit}>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        placeholder=\"\"\n        onChange={onHandleChange}\n      />\n      <button className={s.button} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import MoviesList from 'components/moviesList/MoviesList';\nimport SearchBar from 'components/searchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmsBySearch } from '../services/apiService';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n\n  const [dataFilms, setDataFilms] = useState([]);\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) return;\n    getFilmsBySearch(query)\n      .then(res => setDataFilms(res.results))\n      .catch(err => console.log(err));\n  }, [searchParams, setDataFilms]);\n\n  return (\n    <>\n      <SearchBar />\n      {dataFilms && <MoviesList films={dataFilms} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'e8d4c6f2420119eaaf1bee0b0d0a70d8';\n\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/week?api_key=${KEY}`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoById = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFilmsBySearch = async query => {\n  return await axios(`${URL}search/movie`, {\n    params: {\n      api_key: KEY,\n      query: query,\n    },\n  }).then(response => response.data);\n};\n"],"names":["title","films","location","useLocation","className","s","map","el","to","id","state","navigate","useNavigate","useState","searchQuery","setSearchQquery","onSubmit","e","preventDefault","type","name","autoComplete","placeholder","onChange","query","target","value","trim","useSearchParams","searchParams","dataFilms","setDataFilms","useEffect","get","getFilmsBySearch","then","res","results","catch","err","console","log","MoviesList","URL","KEY","getTrendingFilms","axios","response","data","getFullInfoById","getCast","cast","getReviews","params","api_key"],"sourceRoot":""}